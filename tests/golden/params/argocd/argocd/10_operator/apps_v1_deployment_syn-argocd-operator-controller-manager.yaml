apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: argocd-operator
  name: syn-argocd-operator-controller-manager
  namespace: syn-argocd-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: argocd-operator
  template:
    metadata:
      labels:
        control-plane: argocd-operator
    spec:
      containers:
        - args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=10
          image: mymirror.io/kubebuilder/kube-rbac-proxy:v1.1.1
          name: kube-rbac-proxy
          ports:
            - containerPort: 8443
              name: https
        - args:
            - --health-probe-bind-address=:8081
            - --metrics-bind-address=127.0.0.1:8080
            - --leader-elect
          command:
            - /manager
          env:
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['olm.targetNamespaces']
            - name: ARGOCD_CLUSTER_CONFIG_NAMESPACES
              value: syn
          image: quay.io/argoprojlabs/argocd-operator:v0.10.1
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          name: manager
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
      priorityClassName: system-cluster-critical
      securityContext:
        runAsNonRoot: true
      serviceAccountName: syn-argocd-operator-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
        - emptyDir: {}
          name: cert
