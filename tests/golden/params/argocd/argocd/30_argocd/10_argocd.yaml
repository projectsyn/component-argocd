apiVersion: argoproj.io/v1beta1
kind: ArgoCD
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: '10'
  labels:
    name: syn-argocd
  name: syn-argocd
  namespace: syn
spec:
  applicationInstanceLabelKey: argocd.argoproj.io/instance
  controller:
    appSync: 3m0s
    logFormat: text
    logLevel: info
    processors:
      operation: 10
      status: 20
  extraConfig:
    resource.customizations: |-
      "operators.coreos.com/Subscription":
        "health.lua.useOpenLibs": true
  image: quay.io/argoproj/argocd
  initialRepositories: '- url: ssh://git@git.example.com/org/repo.git'
  initialSSHKnownHosts:
    keys: |
      bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==
      github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
      gitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=
      gitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf
      gitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9
      ssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
      vs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
      git.vshn.net ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDV6noAeyhRcimZyicDFwcQwXhlbQmqSXHWk46pUVd2Igsf4t1oAPMhbvnnfuHT8H8kfiSkFW/xXaJ6/3SfvQ0WqeKb0jaxP6fW8nkw2EGGLZmm4lK8FJa7BmpjecdlE9M+KoodK/KVVzj8c9EDrKfjnm8O6vsiKI4RhYLMHTgluIc3xeJ95ezZGqtiKj7nFgPgI5l33wb0RUqZdFpPV1kpayyRh/EcJLAGjUrunikUN0sdiz+W8wohgL/Yu5ON7KE+vj/onwQFlIy2I0w2Wq1hiXHVZfhGviv5R0fDpPDPncNaAARbF6zikko0ZoHQsgE1JZ5zSSl7zIu/4JTrKhfkGd4wsV40ag8ttagsb70ZN8dlQWN7xCIyyBkhpXSLfmT6tS6SuXMi17jQmaYgM8R7UTfcxnTx4L0hdvXvxK9NE6V3MMIaI5ExZww58al/9s/UdtJQNLFhOsBkUnnVHBZGzawV0yX9zVOBumYVRSIvkAfaaQ1eQbAzrN6ygg8m4FU=
      git.vshn.net ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKpMpSEws+01sdyRHhWJvZjZczk/4beFHZsFOSkRuIFh
      gitlab-dev.syn.tools ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDybOH3scUSfAJFkskpVn1VcL1mPNSiV05asrCCjDTzSJOeJuCE99KkHf7eTA29as9NaqtMtJcCxhptLfNaRzUR3zf29eUuPhkh2B5PUaqLpsbm6330QxvWsZNJyI8Cf7i78O3qe4dv7p2Fe78ayLKX/q3dRj0PZnl7kMj7YpCfY7VCndqoIKEOlIEqNjzAFhHLgHEMJ8f8cM5s4qorgc3TdCqORGVs5vqkeNm977yz2hMxB7iEET4O2jfBUHzzZ68T5h5AtrL5YVBMP0xTgaLskk7/QnoEsfKAgTXo/AaUuXbzM6N0nIjH00Ll0s6P2fWyRVXz05eauZZhBS85GQTD
      gitlab-dev.syn.tools ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBCz/gtGxqX+WS6E9/NLYTkRLkM7r7JHU5N7vz2kJjRbjhR91JvP7NaHtuN5aPm5Wv9rtPKSackQ9B78VCkr6GLw=
      gitlab-dev.syn.tools ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKtv4stHQjApa7wkgvgo4dB52qLzI/zN2Us+89cQXXm0
  redis:
    image: docker.io/library/redis
    version: 7.4.5
  repo:
    env:
      - name: HOME
        value: /home/argocd
    image: quay.io/argoproj/argocd
    logFormat: text
    logLevel: info
    sidecarContainers:
      - args:
          - --loglevel
          - info
          - --logformat
          - text
        command:
          - /var/run/argocd/argocd-cmp-server
        env:
          - name: HOME
            value: /home/argocd
        image: mymirror.io/projectsyn/kapitan:0.34.1
        imagePullPolicy: IfNotPresent
        name: kapitan
        ports: []
        securityContext:
          runAsNonRoot: true
          runAsUser: 999
        stdin: false
        tty: false
        volumeMounts:
          - mountPath: /home/argocd/cmp-server/config/plugin.yaml
            name: kapitan-plugin-config
            subPath: plugin.yaml
          - mountPath: /home/argocd/cmp-server/plugins
            name: plugins
          - mountPath: /var/run/argocd
            name: var-files
          - mountPath: /home/argocd/
            name: vault-token
      - args:
          - agent
          - -config
          - /etc/vault/vault-agent-config.json
        env:
          - name: SKIP_SETCAP
            value: 'true'
          - name: VAULT_ADDR
            value: test.syn.tools
        image: mymirror.io/vault:1.17.6
        imagePullPolicy: IfNotPresent
        name: vault-agent
        ports: []
        securityContext:
          runAsUser: 100
        stdin: false
        tty: false
        volumeMounts:
          - mountPath: /var/run/secrets/syn/
            name: steward-token
          - mountPath: /etc/vault/
            name: vault-config
          - mountPath: /home/vault/
            name: vault-token
    version: v2.14.20
    volumeMounts:
      - mountPath: /home/argocd/
        name: vault-token
    volumes:
      - emptyDir:
          medium: Memory
        name: vault-token
      - configMap:
          name: vault-agent-config
        name: vault-config
      - name: steward-token
        secret:
          secretName: steward
      - configMap:
          name: kapitan-plugin-config
        name: kapitan-plugin-config
  repositoryCredentials: |
    - url: ssh://git@
      sshPrivateKeySecret:
        name: argo-ssh-key
        key: sshPrivateKey
  resourceExclusions: |-
    - "apiGroups":
      - "cilium.io"
      "clusters":
      - "*"
      "kinds":
      - "CiliumIdentity"
    - "apiGroups":
      - "custom.io"
      "clusters":
      - "*"
      "kinds":
      - "ClusterWrecker"
  resourceHealthChecks:
    - check: |
        hs = {}
        if obj.status ~= nil then
          if obj.status.conditions ~= nil then
            installed = false
            healthy = false
            for i, condition in ipairs(obj.status.conditions) do
              if condition.type == "Installed" then
                installed = condition.status == "True"
                installed_message = condition.reason
              elseif condition.type == "Healthy" then
                healthy = condition.status == "True"
                healthy_message = condition.reason
              end
            end
            if installed and healthy then
              hs.status = "Healthy"
            else
              hs.status = "Degraded"
            end
            hs.message = installed_message .. " " .. healthy_message
            return hs
          end
        end

        hs.status = "Progressing"
        hs.message = "Waiting for provider to be installed"
        return hs
      group: pkg.crossplane.io
      kind: Provider
    - check: |
        hs = {}
        if obj.status ~= nil then
          if obj.status.conditions ~= nil then
            numDegraded = 0
            numPending = 0
            msg = ""
            for i, condition in pairs(obj.status.conditions) do
              msg = msg .. i .. ": " .. condition.type .. " | " .. condition.status .. "\n"
              if condition.type == "InstallPlanPending" and condition.status == "True" then
                -- Custom check to ignore InstallPlanPending when subscription has manual approval on stackgres
                if obj.spec ~= nil and obj.spec.installPlanApproval == "Manual" and obj.metadata.name == "stackgres" then
                  msg = msg .. "; Ignoring InstallPlanPending for manual approval subscription"
                else
                  numPending = numPending + 1
                end
              elseif (condition.type == "CatalogSourcesUnhealthy" or condition.type == "InstallPlanMissing" or condition.type == "InstallPlanFailed" or condition.type == "ResolutionFailed") and condition.status == "True" then
                -- Custom check to ignore ConstraintsNotSatisfiable for
                -- cilium-enterprise subscription.
                if condition.type == "ResolutionFailed"  and condition.reason == "ConstraintsNotSatisfiable" and string.find(condition.message, "cilium%-enterprise") then
                  msg = msg .. "; Ignoring ConstraintsNotSatisfiable for cilium-enterprise subscription"
                else
                  numDegraded = numDegraded + 1
                end
              end
            end
            if numDegraded == 0 and numPending == 0 then
              hs.status = "Healthy"
              hs.message = msg
              return hs
            elseif numPending > 0 and numDegraded == 0 then
              hs.status = "Progressing"
              hs.message = "An install plan for a subscription is pending installation"
              return hs
            else
              hs.status = "Degraded"
              hs.message = msg
              return hs
            end
          end
        end
        hs.status = "Progressing"
        hs.message = "An install plan for a subscription is pending installation"
        return hs
      group: operators.coreos.com
      kind: Subscription
  resourceIgnoreDifferences:
    resourceIdentifiers:
      - customization:
          jsonPointers:
            - /webhooks/0/clientConfig/caBundle
        group: admissionregistration.k8s.io
        kind: MutatingWebhookConfiguration
      - customization:
          jsonPointers:
            - /webhooks/0/clientConfig/caBundle
        group: admissionregistration.k8s.io
        kind: ValidatingWebhookConfiguration
      - customization:
          jsonPointers:
            - /status
            - /spec/scope
        group: apiextensions.k8s.io
        kind: CustomResourceDefinition
  server:
    insecure: true
    logFormat: text
    logLevel: info
  version: v2.14.20
