apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: redis
    app.kubernetes.io/name: argocd-redis
    app.kubernetes.io/part-of: argocd
  name: argocd-redis
  namespace: syn
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-redis
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-redis
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
      containers:
        - args: []
          env:
            - name: ALLOW_EMPTY_PASSWORD
              value: 'yes'
            - name: REDIS_AOF_ENABLED
              value: 'no'
            - name: REDIS_EXTRA_FLAGS
              value: --save ''
          image: quay.io/bitnami/redis:6.2.4
          imagePullPolicy: IfNotPresent
          name: redis
          ports:
            - containerPort: 6379
          volumeMounts:
            - mountPath: /bitnami/redis/data
              name: data
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
      serviceAccountName: argocd-redis
      volumes:
        - emptyDir: {}
          name: data
